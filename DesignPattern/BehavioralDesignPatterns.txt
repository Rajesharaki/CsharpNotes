Behavioral Design Pattern:
--------------------------
Behavioral patterns provide solution for the better interaction between objects and how to provide lose coupling and flexibility to extend easily.

1.Obeserver Design Pattern
2.Visitor Design Pattern
3.Mediator Design Pattern

1.Obeserver Design Pattern:
----------------------------
Observer Pattern is one of the behavioral design pattern. Observer design pattern is useful when you are interested in the state of an object and want to get notified whenever there is any change. 
In observer pattern, the object that watch on the state of another object are called Observer and the object that is being watched is called Subject. 

2.Visitor Design Pattern:
--------------------------
Visitor pattern is used when we have to perform an operation on a group of similar kind of Objects. With the help of visitor pattern, we can move the operational 
logic from the objects to another class. 
For example, think of a Shopping cart where we can add different type of items (Elements). 
When we click on checkout button, it calculates the total amount to be paid. Now we can have the calculation logic in item classes or we can move out this logic to another class using visitor pattern. Letâ€™s implement this in our example of visitor pattern.

3.Mediator Design Pattern:
--------------------------
Mediator Design Pattern is very helpful in an enterprise application where multiple objects are interacting with each other. If the objects interact with each other directly, the system components are tightly-coupled with each other that makes higher maintainability cost and not hard to extend. 
Mediator pattern focuses on provide a mediator between objects for communication and help in implementing loose-coupling between objects.
Allows loose coupling by encapsulating the way disparate sets of objects interact and communicate with each other. 










